from utils.featurizer import GenealFeaturizer
from utils.descriptor import Descriptor

desp = Descriptor()
gdesp = GenealFeaturizer()

CONFIG = { 
        'carbon_cnt': dict(featurizer=gdesp,
                            descriptor=desp.compute_atom_num,
                            para=dict(symbols=['C']),
                            node_dim=39, edge_dim=10),
        'noncarbon_cnt': dict(featurizer=gdesp,
                               descriptor=desp.compute_atom_num,
                               para=dict(symbols=['C'], reverse=True),
                               node_dim=39, edge_dim=10),
        'bond_cnt': dict(featurizer=gdesp,
                                    descriptor=desp.compute_bond_num,
                                    para=dict(bondtypes=[1, 3]),
                                    node_dim=39, edge_dim=10),
        'molecule_energy': dict(featurizer=gdesp,
                                 descriptor=desp.compute_molecule_energy,
                                 para=dict(symbols=['O', 'N', 'S', 'P', 'F']),
                                 node_dim=39, edge_dim=10),
        'tpsa': dict(featurizer=gdesp,
                      descriptor=desp.compute_tpsa,
                      para=dict(),
                      node_dim=39, edge_dim=10),
        'asa': dict(featurizer=gdesp,
                     descriptor=desp.compute_asa,
                     para=dict(symbols=['O', 'N', 'S', 'F', 'Cl', 'Br', 'I']),
                     node_dim=39, edge_dim=10),
        'logp': dict(featurizer=gdesp,
                      descriptor=desp.compute_logp,
                      para=dict(),
                      node_dim=39, edge_dim=10),
        'group_cnt': dict(featurizer=gdesp,
                           descriptor=desp.compute_group_num,
                           para=dict(),
                           node_dim=39, edge_dim=10),
        'inring_cnt': dict(featurizer=gdesp,
                            descriptor=desp.compute_inring_atom_num,
                            para=dict(),
                            node_dim=39, edge_dim=10),
        'aromatic_cnt': dict(featurizer=gdesp,
                              descriptor=desp.compute_aromatic_atom_num,
                              para=dict(),
                              node_dim=39, edge_dim=10),
        'polar_coef': dict(featurizer=gdesp,
                            descriptor=desp.compute_polar_coefficient,
                            para=dict(),
                            node_dim=39, edge_dim=10),
        'proton_cnt': dict(featurizer=gdesp,
                            descriptor=desp.compute_protons_num,
                            para=dict(symbols=['C', 'O']),
                            node_dim=39, edge_dim=10)
}
